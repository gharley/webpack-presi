{
  "cache" : {
    "description" : "Cache generated modules and chunks to improve performance for multiple incremental builds.",
    "default" : true,
    "type" : "boolean or object"
  },
  "context" : {
    "description" : "The base directory (absolute path!) for resolving the `entry` option. If `output.pathinfo` is set, the included pathinfo is shortened to this directory.",
    "type" : "string",
    "default" : "cwd"
  },
  "devtool" : {
    "description" : "A developer tool to enhance debugging.",
    "default" : false,
    "type" : "boolean or string"
  },
  "entry" : {
    "description" : "The entry point(s) of the compilation.",
    "type" : "string, object or array of strings"
  },
  "externals" : {
    "description" : "Specify dependencies that shouldn't be resolved by webpack, but should become dependencies of the resulting bundle. The kind of the dependency depends on `output.libraryTarget`.",
    "type" : "string or object or function or RegExp or array of these"
  },
  "module" : {
    "loaders" : {
      "description" : "An array of automatically applied loaders."
    },
    "noParse" : {
      "description" : "Don't parse files matching. It's matched against the full resolved request.",
      "type" : "RegExp or array of RegExp"
    }
  },
  "output" : {
    "description" : "Options affecting the output of the compilation. `output` options tell webpack how to write the compiled files to disk. IGNORED BY DEV SERVER",
    "type" : "object",
    "properties" : {
      "filename" : {},
      "chunkFilename" : {},
      "library" : {},
      "hotUpdateFunction" : {},
      "jsonpFunction" : {},
      "libraryTarget" : {},
      "path" : {},
      "sourceMapFilename" : {},
      "hotUpdateChunkFilename" : {},
      "hotUpdateMainFilename" : {},
      "crossOriginLoading" : {},
      "hashFunction" : {},
      "hashDigest" : {},
      "hashDigestLength" : {},
      "devtoolLineToLine" : {}
    }
  },
  "node" : {
    "description" : "Include polyfills or mocks for various node stuff.",
    "type" : "object",
    "properties" : {
      "console" : {
        "default" : false
      },
      "process" : {
        "default" : true
      },
      "global" : {
        "default" : true
      },
      "Buffer" : {
        "default" : true
      },
      "setImmediate" : {
        "default" : true
      },
      "__filename" : {
        "default" : "mock"
      },
      "__dirname" : {
        "default" : "mock"
      }
    }
  },
  "plugins" : {},
  "resolve" : {
    "description" : "",
    "type" : "object",
    "properties" : {
      "unsafeCache" : {
        "default" : true
      },
      "modules" : {
        "default" : ["node_nodules"]
      },
      "extensions" : {
        "default" : [".js", ".json"]
      },
      "aliasFields" : {
        "default" : "For web or webworker targets ['browser'], otherwise []"
      },
      "mainFields" : {
        "default" : "For web or webworker targets ['browser', 'module', 'main'], otherwise ['module', 'main']"
      }
    }
  },
  "target" : {
    "description" : "Output target. Seems to determine which default plugins are loaded, particularly those that apply to the 'output' property",
    "validValues" : "One of [web, webworker, node, async-node, node-webkit, atom, electron, electron-main, electron-renderer] or a function.",
    "default" : "web"
  }
}
